angular.module("14all",["ui.bootstrap","manga","movie","auth","serie","templates.app"]).config(["RestangularProvider",function(RestangularProvider){RestangularProvider.setRestangularFields({id:"_id"}),RestangularProvider.setBaseUrl("/api")}]).controller("AppCtrl",["$scope","authService",function($scope,authService){$scope.isLoggedIn=authService.isLoggedIn,$scope.logout=authService.logout}]),angular.module("auth",["ngRoute"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/login",{templateUrl:"auth/login.html",controller:["$scope","authService","$routeParams",function($scope,authService,$routeParams){$routeParams.token&&authService.login($routeParams.token),$scope.heading="Login",$scope.message="You need to login to view this page!"}]}).when("/notauthorized",{templateUrl:"auth/message.html",controller:["$scope","authService",function($scope){$scope.heading="Not Authorized",$scope.message="You are not authorized to view this page!"}]}).when("/logout",{templateUrl:"auth/message.html",controller:["$scope","authService",function($scope,authService){$scope.heading="Logout",$scope.message="Your logout was a success!",authService.logout()}]}).otherwise({templateUrl:"auth/message.html",controller:["$scope",function($scope){$scope.heading="Welcome!",$scope.message="Welcome to 14all! :)"}]})}]).run(["$rootScope","authService","$location",function($rootScope,authService,$location){authService.authenticate().then(function(){$rootScope.$on("$routeChangeStart",function(event,next){next.$$route&&next.$$route.authRequired&&(authService.isLoggedIn()||$location.path("/login"))})})}]).factory("authService",["Restangular","$location",function(Restangular,$location){function getAuthInfo(){return Restangular.oneUrl("auth/info").get().then(function(response){authInfo=response},function(){authInfo={}})}function isLoggedIn(){return authInfo&&authInfo.user&&authInfo.user.username}function authenticate(){return Restangular.setDefaultHeaders({Authorization:"Bearer "+localStorage.getItem("access_token")}),getAuthInfo()}function setToken(access_token){localStorage.setItem("access_token",access_token),authenticate()}function login(access_token){setToken(access_token),$location.url("/")}function logout(){Restangular.oneUrl("auth/logout").post().then(function(){localStorage.removeItem("access_token"),authInfo={},Restangular.setDefaultHeaders({Authorization:""}),$location.url("/")})}function isAuthorized(){}var authInfo,service={isLoggedIn:isLoggedIn,login:login,authenticate:authenticate,getAuthInfo:getAuthInfo,logout:logout,isAuthorized:isAuthorized,authInfo:authInfo};return service}]),angular.module("manga",["ngRoute","manga.resource"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/manga",{templateUrl:"manga/list.html",controller:"MangaListCtrl",authRequired:!0})}]).controller("MangaListCtrl",["$scope","Mangas","$location","$filter",function($scope,Mangas){function removeManga(manga){$scope.mangas.splice($scope.mangas.indexOf(manga),1)}$scope.mangas=Mangas.getList().$object,$scope.remove=function(manga){manga.remove().then(function(){removeManga(manga)})},$scope.update=function(manga){manga.put().then(function(updatedManga){manga.editable=!1,manga.updatedAt=updatedManga.updatedAt})},$scope.cancel=function(manga){manga.isnew&&($scope.newmanga={}),manga.editable=!1},$scope.add=function(){$scope.newmanga={isnew:!0}},$scope.create=function(manga){Mangas.post(manga).then(function(addedManga){$scope.newmanga={},$scope.mangas.push(addedManga)},function(){console.log("Error")})},$scope.finished=function(manga){manga.finished=!manga.finished,manga.put().then(function(updatedManga){manga.updatedAt=updatedManga.updatedAt})},$scope.increase=function(manga){manga.chapter+=1,manga.put().then(function(updatedManga){manga.updatedAt=updatedManga.updatedAt})},$scope.decrease=function(manga){manga.chapter-=1,manga.put().then(function(updatedManga){manga.updatedAt=updatedManga.updatedAt})},$scope.getNextChapterUrl=function(manga){if(manga.finished)return"";var url=manga.url,chapter=manga.chapter+1;return url?url.replace("$$chapter$$",chapter):""}}]),angular.module("manga.resource",["restangular"]).factory("Mangas",["Restangular",function(restangular){var Mangas=restangular.all("manga");return Mangas}]),angular.module("movie",["ngRoute","movie.resource"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/movie",{templateUrl:"movie/list.html",controller:"MovieListCtrl",authRequired:!0})}]).controller("MovieListCtrl",["$scope","Movies","$location","$filter",function($scope,Movies){function removeMovie(movie){$scope.movies.splice($scope.movies.indexOf(movie),1)}$scope.movies=Movies.getList().$object,$scope.remove=function(movie){movie.remove().then(function(){removeMovie(movie)})},$scope.update=function(movie){movie.put().then(function(updatedMovie){movie.editable=!1,movie.updatedAt=updatedMovie.updatedAt})},$scope.cancel=function(movie){movie.isnew&&($scope.newmovie={}),movie.editable=!1},$scope.add=function(){$scope.newmovie={isnew:!0}},$scope.create=function(movie){Movies.post(movie).then(function(addedMovie){$scope.newmovie={},$scope.movies.push(addedMovie)},function(){console.log("Error")})},$scope.finished=function(movie){movie.finished=!movie.finished,movie.put().then(function(updatedMovie){movie.updatedAt=updatedMovie.updatedAt})}}]),angular.module("movie.resource",["restangular"]).factory("Movies",["Restangular",function(restangular){var Movies=restangular.all("movie");return Movies}]),angular.module("serie",["ngRoute","serie.resource"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/serie",{templateUrl:"serie/list.html",controller:"SerieListCtrl",authRequired:!0})}]).controller("SerieListCtrl",["$scope","Series","$location","$filter",function($scope,Series){function removeSerie(serie){$scope.series.splice($scope.series.indexOf(serie),1)}$scope.series=Series.getList().$object,$scope.remove=function(serie){serie.remove().then(function(){removeSerie(serie)})},$scope.update=function(serie){serie.put().then(function(updatedSerie){serie.editable=!1,serie.updatedAt=updatedSerie.updatedAt})},$scope.cancel=function(serie){serie.isnew&&($scope.newserie={}),serie.editable=!1},$scope.add=function(){$scope.newserie={isnew:!0}},$scope.create=function(serie){Series.post(serie).then(function(addedSerie){$scope.newserie={},$scope.series.push(addedSerie)},function(){console.log("Error")})},$scope.finished=function(serie){serie.finished=!serie.finished,serie.put().then(function(updatedSerie){serie.updatedAt=updatedSerie.updatedAt})},$scope.increaseSe=function(serie){serie.season+=1,serie.put().then(function(updatedSerie){serie.updatedAt=updatedSerie.updatedAt})},$scope.decreaseSe=function(serie){serie.season-=1,serie.put().then(function(updatedSerie){serie.updatedAt=updatedSerie.updatedAt})},$scope.increaseEp=function(serie){serie.episode+=1,serie.put().then(function(updatedSerie){serie.updatedAt=updatedSerie.updatedAt})},$scope.decreaseEp=function(serie){serie.episode-=1,serie.put().then(function(updatedSerie){serie.updatedAt=updatedSerie.updatedAt})}}]),angular.module("serie.resource",["restangular"]).factory("Series",["Restangular",function(restangular){var Series=restangular.all("serie");return Series}]),angular.module("14all").filter("isFinished",function(){return function(input,enabled){if(!enabled)return input;var ret=[];return angular.forEach(input,function(item){(angular.isUndefined(item.finished)||!item.finished)&&ret.push(item)}),ret}}),angular.module("14all").factory("jsonStorage",[function(){function getItem(key){return localStorage.getItem(key)}function setItem(key,value){localStorage.setItem(key,value)}function getJson(key){return JSON.parse(getItem(key))}function setJson(key,value){setItem(key,JSON.stringify(value))}var service={getItem:getItem,setItem:setItem,getJson:getJson,setJson:setJson};return service}]);